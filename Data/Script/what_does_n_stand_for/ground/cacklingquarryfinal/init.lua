--[[
    init.lua
    Created: 10/01/2023 21:53:36
    Description: Autogenerated script file for the map cacklingquarryfinal.
]]--
-- Commonly included lua functions and data
require 'what_does_n_stand_for.common'

-- Package name
local cacklingquarryfinal = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---cacklingquarryfinal.Init(map)
--Engine callback function
function cacklingquarryfinal.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  

end

---cacklingquarryfinal.Enter(map)
--Engine callback function
function cacklingquarryfinal.Enter(map)

COMMON.RespawnAllies()

cacklingquarryfinal.cutscene()

end

---cacklingquarryfinal.Exit(map)
--Engine callback function
function cacklingquarryfinal.Exit(map)


end

---cacklingquarryfinal.Update(map)
--Engine callback function
function cacklingquarryfinal.Update(map)


end

---cacklingquarryfinal.GameSave(map)
--Engine callback function
function cacklingquarryfinal.GameSave(map)


end

---cacklingquarryfinal.GameLoad(map)
--Engine callback function
function cacklingquarryfinal.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function cacklingquarryfinal.cutscene()
local player = CH('PLAYER')
local Teammate_1 = CH('Teammate_1')
local Teammate_2 = CH('Teammate_2')
local Teammate_3 = CH('Teammate_3')

local PartySize = GAME:GetPlayerPartyCount()

GAME:MoveCamera(184, 160, 1, false)
GAME:CutsceneMode(true)

GROUND:TeleportTo(player, 184, 160, Direction.Right)

if PartySize == 2 then

GROUND:TeleportTo(Teammate_1, 184, 160, Direction.Right)

elseif PartySize == 3 then --Have to do exact amounts, otherwise every single one of them will play. Not good.

GROUND:TeleportTo(Teammate_1, 184, 160, Direction.Right)
GROUND:TeleportTo(Teammate_2, 184, 160, Direction.Right)

elseif PartySize == 4 then

GROUND:TeleportTo(Teammate_1, 184, 160, Direction.Right)
GROUND:TeleportTo(Teammate_2, 184, 160, Direction.Right)
GROUND:TeleportTo(Teammate_3, 184, 160, Direction.Right)

end

GROUND:Hide("PLAYER")

if PartySize == 2 then

GROUND:Hide("Teammate_1")

elseif PartySize == 3 then --Have to do exact amounts, otherwise every single one of them will play. Not good.

GROUND:Hide("Teammate_1")
GROUND:Hide("Teammate_2")

elseif PartySize == 4 then

GROUND:Hide("Teammate_1")
GROUND:Hide("Teammate_2")
GROUND:Hide("Teammate_3")

end

UI:WaitShowTitle("At the top of\nCackling Quarry", 20)
GAME:WaitFrames(60)
UI:WaitHideTitle(20)

SOUND:PlayBGM("Cave Camp.ogg", true)
GAME:FadeIn(20)
GAME:WaitFrames(20)

GROUND:Unhide("PLAYER")
GROUND:MoveInDirection(player, Direction.Right, 30, false, 1)
GROUND:CharAnimateTurn(player, Direction.Up, 4, true)

local coro1 = TASK:BranchCoroutine(function() 
GAME:MoveCamera(184, 090, 60, false)
end)

local coro2 = TASK:BranchCoroutine(function() 
GROUND:MoveInDirection(player, Direction.UpLeft, 30, false, 1)
GROUND:MoveInDirection(player, Direction.Up, 50, false, 1)
GAME:WaitFrames(40)
GROUND:EntTurn(player, Direction.UpLeft)
GAME:WaitFrames(20)
GROUND:CharAnimateTurn(player, Direction.UpRight, 8, false)
GAME:WaitFrames(20)
GROUND:EntTurn(player, Direction.Up)
GAME:WaitFrames(80)
GROUND:CharSetEmote(player, "sweatdrop", 1)
end)

	if PartySize >= 2 then --This just works.
local coro3 = TASK:BranchCoroutine(function() cacklingquarryfinal.Teammate1_Sequence(Teammate_1) end)
	end
	
	if PartySize >= 3 then
local coro4 = TASK:BranchCoroutine(function() cacklingquarryfinal.Teammate2_Sequence(Teammate_2) end)
	end
	
	if PartySize == 4 then
local coro5 = TASK:BranchCoroutine(function() cacklingquarryfinal.Teammate3_Sequence(Teammate_3) end)
	end
	
local coro6 = TASK:BranchCoroutine(function()
GAME:WaitFrames(90)
UI:ResetSpeaker(false)
UI:SetCenter(true)

UI:WaitShowDialogue("This must be the top of [color=#FFC663]Cackling Quarry[color]...")
UI:WaitShowDialogue("There doesn't seem to be anything here to report...")
UI:WaitShowDialogue("Might as well head back now.")
UI:SetCenter(false)

GAME:FadeOut(false, 20)
GAME:CutsceneMode(false)
GAME:EnterZone('treasuretownzone', -1, 17, 0)
end)
 
TASK:JoinCoroutines({coro1,coro2,coro3,coro4,coro5,coro6})

GAME:CutsceneMode(false)
end

function cacklingquarryfinal.Teammate1_Sequence(character)
	
GROUND:Unhide("Teammate_1")
GROUND:MoveInDirection(character, Direction.Right, 30, false, 1)
GROUND:MoveInDirection(character, Direction.UpRight, 30, false, 1)
GAME:WaitFrames(20)
GROUND:EntTurn(character, Direction.Right)
GAME:WaitFrames(20)
GROUND:EntTurn(character, Direction.UpRight)
GAME:WaitFrames(30)
GROUND:CharAnimateTurn(character, Direction.UpLeft, 4, true)
GAME:WaitFrames(5)
GROUND:MoveInDirection(character, Direction.UpLeft, 35, false, 1)
GAME:WaitFrames(10)
GROUND:CharSetEmote(character, "question", 1)
GAME:WaitFrames(40)
GROUND:EntTurn(character, Direction.Up)
GAME:WaitFrames(20)
GROUND:EntTurn(character, Direction.UpRight)
GAME:WaitFrames(20)
GROUND:EntTurn(character, Direction.Up)

end

function cacklingquarryfinal.Teammate2_Sequence(character)

GAME:WaitFrames(60)
GROUND:Unhide("Teammate_2")
GROUND:MoveInDirection(character, Direction.Right, 30, false, 1)
GROUND:CharAnimateTurn(character, Direction.Up, 4, true)
GROUND:MoveInDirection(character, Direction.Up, 20, false, 1)
GROUND:CharAnimateTurn(character, Direction.Left, 4, true)
GROUND:MoveInDirection(character, Direction.Left, 60, false, 1)
GAME:WaitFrames(20)
GROUND:EntTurn(character, Direction.UpLeft)
GAME:WaitFrames(10)
GROUND:CharAnimateTurn(character, Direction.DownLeft, 4, true)
GAME:WaitFrames(20)
GROUND:EntTurn(character, Direction.Left)
GAME:WaitFrames(10)
GROUND:CharSetEmote(character, "sweatdrop", 1)
GAME:WaitFrames(40)
GROUND:CharAnimateTurn(character, Direction.UpRight, 4, false)
GAME:WaitFrames(10)
GROUND:CharSetEmote(character, "question", 1)
GAME:WaitFrames(40)
GROUND:MoveInDirection(character, Direction.UpRight, 35, false, 1)
GROUND:EntTurn(character, Direction.Up)

end

function cacklingquarryfinal.Teammate3_Sequence(character)

GAME:WaitFrames(120)
GROUND:Unhide("Teammate_3")
GROUND:MoveInDirection(character, Direction.Right, 30, false, 1)
GAME:WaitFrames(10)
GROUND:EntTurn(character, Direction.UpRight)
GAME:WaitFrames(10)
GROUND:CharAnimateTurn(character, Direction.DownRight, 4, false)
GAME:WaitFrames(10)
GROUND:EntTurn(character, Direction.Right)
GAME:WaitFrames(20)
GROUND:CharAnimateTurn(character, Direction.UpLeft, 4, true)
GAME:WaitFrames(10)
GROUND:MoveInDirection(character, Direction.UpLeft, 55, false, 1)
GROUND:MoveInDirection(character, Direction.Up, 20, false, 1)
GROUND:CharAnimateTurn(character, Direction.UpRight, 4, false)

end

return cacklingquarryfinal

