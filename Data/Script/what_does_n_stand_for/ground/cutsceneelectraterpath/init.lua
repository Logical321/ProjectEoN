--[[
    init.lua
    Created: 02/02/2024 21:28:49
    Description: Autogenerated script file for the map cutsceneelectraterpath.
]]--
-- Commonly included lua functions and data
require 'what_does_n_stand_for.common'

-- Package name
local cutsceneelectraterpath = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---cutsceneelectraterpath.Init(map)
--Engine callback function
function cutsceneelectraterpath.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  

end

---cutsceneelectraterpath.Enter(map)
--Engine callback function
function cutsceneelectraterpath.Enter(map)

cutscene()

end

---cutsceneelectraterpath.Exit(map)
--Engine callback function
function cutsceneelectraterpath.Exit(map)


end

---cutsceneelectraterpath.Update(map)
--Engine callback function
function cutsceneelectraterpath.Update(map)


end

---cutsceneelectraterpath.GameSave(map)
--Engine callback function
function cutsceneelectraterpath.GameSave(map)


end

---cutsceneelectraterpath.GameLoad(map)
--Engine callback function
function cutsceneelectraterpath.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function cutscene()
local player = CH('PLAYER')
local AdamMudkip = CH('AdamMudkip')
local Piks = CH('Piks')

GAME:CutsceneMode(true)
GAME:MoveCamera(200, 256, 1, true)

local walkCyclePlayer = false
local walkCycleAdam = false
local walkCyclePiks = false

GAME:CutsceneMode(true)

local coro1 = TASK:BranchCoroutine(function()

while not walkCyclePlayer do

GROUND:MoveInDirection(player, Direction.Left, 5, false, 1)

end

end)

local coro2 = TASK:BranchCoroutine(function()

while not walkCycleAdam do

GROUND:MoveInDirection(AdamMudkip, Direction.Left, 5, false, 1)

end

end)

local coro3 = TASK:BranchCoroutine(function()

while not walkCyclePiks do

GROUND:MoveInDirection(Piks, Direction.Left, 5, false, 1)

end

end)

GAME:FadeIn(30)
GAME:WaitFrames(30)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Normal", true)
UI:SetBounds(10,10,300,45)
UI:SetSpeakerLoc(10,65)
UI:WaitShowDialogue("I can't wait to get home, [pause=10]all that clean up and building was pretty tiring.")
UI:SetSpeakerEmotion("Worried", true)
UI:WaitShowDialogue("My entire body feels sore...")

GAME:WaitFrames(10)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Pain", true)
UI:WaitShowDialogue("You got that right, [pause=10][color=#54ebaf]Piks[color].")
UI:WaitShowDialogue("My paws hurt so much from moving those heavy planks and stones around...")

GAME:WaitFrames(10)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Worried", true)
UI:WaitShowDialogue("We aren't carpenters, [pause=10]that's for sure.")
UI:WaitShowDialogue("I'm glad the [color=#00FFFF]Timburr[color] took over when they got there. [pause=0]They know building more than anyone we know.")

GAME:WaitFrames(10)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Normal", true)
UI:WaitShowDialogue("They're excellent at their job, [pause=10]how can anyone hate them?")

GAME:WaitFrames(60)
SOUND:PlayBGM("None", true)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Worried", true)
UI:WaitShowDialogue("I have to ask, [pause=10][color=#54ebaf]Adam[color]... [pause=30]Did you notice anything funny on [color=#00FFFF]Chatot[color] when you were taking him home?")

	SOUND:PlayBattleSE("EVT_Emote_Sweating")
	GROUND:CharSetEmote(AdamMudkip, "sweating", 1)
GAME:WaitFrames(40)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Worried", true)
UI:WaitShowDialogue("I don't remember anything out of the ordinary...")
UI:WaitShowDialogue("But it's also been several days, [pause=10]so I could be wrong.")
UI:WaitShowDialogue("Did you see anything strange?")

GAME:WaitFrames(10)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Worried", true)
SOUND:PlayBGM("I Saw Something Again.ogg", true)
UI:WaitShowDialogue("Yeah, [pause=10]I did.")
UI:WaitShowDialogue("For whatever reason, [pause=10]there was a faint purple glow very close to [color=#00FFFF]Chatot[color]'s head.")
UI:WaitShowDialogue("I'm not entirely sure what it was, [pause=10]but I was certain it was there.")

walkCyclePlayer = true
walkCycleAdam = true
walkCyclePiks = true

SOUND:PlayBattleSE("EVT_Emote_Shock")
GROUND:CharSetEmote(AdamMudkip, "shock", 1)
GAME:WaitFrames(30)

GROUND:CharAnimateTurn(AdamMudkip, Direction.Right, 2, true)
GAME:WaitFrames(10)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Surprised")
UI:WaitShowDialogue("W-wait! [pause=0]Was it this thing!? [pause=0]I found it when I was walking back home!")

UI:ResetSpeaker(false)
SOUND:PlayBattleSE("EVT_CH02_Item_Place")
GAME:WaitFrames(20)

UI:WaitShowDialogue("[color=#54ebaf]Adam[color] gave [color=#54ebaf]Piks[color] a very dull poison dart.")


SOUND:PlayBattleSE("EVT_Emote_Shock")
GROUND:CharSetEmote(Piks, "shock", 1)
GAME:WaitFrames(30)

UI:SetSpeaker(Piks)
UI:SetBounds(10,10,300,45)
UI:SetSpeakerLoc(10,65)
UI:SetSpeakerEmotion("Surprised", true)
UI:WaitShowDialogue("A poison dart, [pause=10]I should've known. [pause=0]I[emote=Worried]t must've fell off him when he was walking.") --Apparently placing the emote call... thing works fine after a single letter. It just looks stupid.
UI:SetSpeakerEmotion("Worried", true)
UI:WaitShowDialogue("Looking at it now, [pause=10]it looks rather strange...")
UI:WaitShowDialogue("Why doesn't it look more... [pause=20]refined?")

GAME:WaitFrames(10)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Worried")
UI:WaitShowDialogue("I'm not sure. [pause=0]It does look rather percise for a poison dart...")
UI:WaitShowDialogue("No poison-type Pokémon that we know of is capable of producing smooth darts like these.")

GAME:WaitFrames(10)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Determined", true)
UI:WaitShowDialogue("What about that Pokémon we saw at [color=#FFC663]Drenched Bluff[color]? [pause=0]They must have poisoned [color=#00FFFF]Chatot[color]!")

GAME:WaitFrames(10)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Worried")
UI:WaitShowDialogue("Let's not jump there yet. [pause=0]What if that Pokémon isn't a poison-type?")
UI:WaitShowDialogue("We would have to ask it ourselves... [pause=20]if we can find it...")

	SOUND:PlayBattleSE("EVT_Emote_Sweating")
	GROUND:CharSetEmote(Piks, "sweating", 1)
GAME:WaitFrames(40)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Pain", true)
UI:WaitShowDialogue("Tch, [pause=10]that's true...")

GAME:WaitFrames(10)
SOUND:PlayBGM("None", true)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Normal")
UI:WaitShowDialogue("We'll get them eventually, [pause=10]buddy.")
UI:WaitShowDialogue("I think we should talk about ".. CH('PLAYER'):GetDisplayName() .." for a little bit.")

GAME:WaitFrames(10)
SOUND:PlayBGM("Hope (Light Arrangement 3).ogg", true)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Normal", true)
UI:WaitShowDialogue("What about ".. GenderCheck(player, "them", false) .. "? [pause=0]I thought ".. GenderCheck(player, "they were", false) .. " doing a nice job.")

GROUND:CharAnimateTurn(AdamMudkip, Direction.Left, 4, false)
GAME:WaitFrames(10)

walkCyclePlayer = false
walkCycleAdam = false
walkCyclePiks = false

local coro1 = TASK:BranchCoroutine(function()

while not walkCyclePlayer do

GROUND:MoveInDirection(player, Direction.Left, 5, false, 1)

end

end)

local coro2 = TASK:BranchCoroutine(function()

while not walkCycleAdam do

GROUND:MoveInDirection(AdamMudkip, Direction.Left, 5, false, 1)

end

end)

local coro3 = TASK:BranchCoroutine(function()

while not walkCyclePiks do

GROUND:MoveInDirection(Piks, Direction.Left, 5, false, 1)

end

end)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Normal", true)
UI:WaitShowDialogue(GenderCheck(player, "they're", true) .. " working pretty hard. [pause=0]Learns quickly as well.")
UI:SetSpeakerEmotion("Worried", true)
UI:WaitShowDialogue("It just makes me feel a little guilty that ".. GenderCheck(player, "they're", false) .." working so much that we rarely get to do things with ".. GenderCheck(player, "them", false) ..".")

GAME:WaitFrames(10)

UI:SetSpeaker(Piks)
UI:SetSpeakerEmotion("Worried", true)
UI:WaitShowDialogue("We've been busy ourselves...")
UI:SetSpeakerEmotion("Normal", true)
UI:WaitShowDialogue("But I think it'll be nice to take a few days off just to know what ".. CH('PLAYER'):GetDisplayName() .." likes to do, [pause=10]or where ".. GenderCheck(player, "they're", false) .." from.")

GAME:WaitFrames(10)
GROUND:CharSetEmote(Kecleon, "glowing", 0)

UI:SetSpeaker(AdamMudkip)
UI:SetSpeakerEmotion("Happy", true)
UI:WaitShowDialogue("Haha, [pause=10]I hope so. [pause=0]".. GenderCheck(player, "they", true) .." look like someone with a fun story behind them.")

GAME:WaitFrames(10)
SOUND:PlayBGM("None", true)

GAME:FadeOut(false, 90)

walkCyclePlayer = true
walkCycleAdam = true
walkCyclePiks = true

GAME:WaitFrames(30)

UI:WaitShowVoiceOver("Several minutes later, in [color=#FFC663]Treasure Town[color]...", -1)
GAME:WaitFrames(20)

GAME:EnterZone('treasuretownzone', -1, 9, 0)

GAME:CutsceneMode(false)
end

function GenderCheck(chara, form, uppercase)

    local gender = chara.CurrentForm.Gender --Ripped straight from Halcyon / I should really put this in the Common.LUA thing instead of this, this is messy af.
    local value = ""
    
    if gender == Gender.Female then
        local female_pronouns = {
            ["them"] = "her",
            ["they"] = "she",
            ["they're"] = "she's",
            ["they were"] = "she was", --Imagine using 'they was doing a nice job', and then using 'she were doing a nice job'. None of those make sense in this sentence.
        }
        value = female_pronouns[form]
    elseif gender == Gender.Male then
        local male_pronouns = {
            ["them"] = "him", 
            ["they"] = "he", 
            ["they're"] = "he's", 
            ["they were"] = "he was", 
        }
        value = male_pronouns[form]
    else -- if neither male or female, use they/them, so just return the form 
        value = form
    end

return uppercase and value:gsub("^%l", string.upper) or value

end

return cutsceneelectraterpath

