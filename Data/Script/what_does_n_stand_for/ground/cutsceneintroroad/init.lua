--[[
    init.lua
    Created: 04/14/2024 21:06:42
    Description: Autogenerated script file for the map cutsceneintroroad.
]]--
-- Commonly included lua functions and data
require 'what_does_n_stand_for.common'

-- Package name
local cutsceneintroroad = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---cutsceneintroroad.Init(map)
--Engine callback function
function cutsceneintroroad.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  

end

---cutsceneintroroad.Enter(map)
--Engine callback function
function cutsceneintroroad.Enter(map)

_DATA.Save.NoSwitching = true --Disable this at your own peril, cutscenes will stop making sense if the 'founder' Pokémon is not the leader. / I also don't know how to reference the Founder Pokémon in any way shape or form when they are NOT the leader.
_DATA.Save.ActiveTeam.Bank = 0 --No free cash for you.
_DATA.Save.ActiveTeam:SetRank("none") --This command is going to be common when the PC earns better Bag upgrades throughout the story. 8 Blocks of Inventory Space is all you should need for Branchway and Drenched.
local talk_evt = RogueEssence.Dungeon.BattleScriptEvent("HeroInteract") --Necessary to make the PC shut up.
_DATA.Save.ActiveTeam.Players[0].ActionEvents:Add(talk_evt)
SV.tutorial.Progress = 0
SV.weather.number = 0

--Roguelocke Unlocks

_DATA.Save.RogueStarters["missingno"] = false

_DATA.Save:RogueUnlockMonster("charmander")
_DATA.Save:RogueUnlockMonster("squirtle")
_DATA.Save:RogueUnlockMonster("pikachu")
_DATA.Save:RogueUnlockMonster("chikorita")
_DATA.Save:RogueUnlockMonster("cyndaquil")
_DATA.Save:RogueUnlockMonster("totodile")
_DATA.Save:RogueUnlockMonster("aron")
_DATA.Save:RogueUnlockMonster("treecko")
_DATA.Save:RogueUnlockMonster("torchic")
_DATA.Save:RogueUnlockMonster("mudkip")
_DATA.Save:RogueUnlockMonster("taillow")
_DATA.Save:RogueUnlockMonster("turtwig")
_DATA.Save:RogueUnlockMonster("chimchar")
_DATA.Save:RogueUnlockMonster("piplup")
_DATA.Save:RogueUnlockMonster("eevee")
_DATA.Save:RogueUnlockMonster("snivy")
_DATA.Save:RogueUnlockMonster("tepig")
_DATA.Save:RogueUnlockMonster("oshawott")
_DATA.Save:RogueUnlockMonster("pidgey")

--Probably a better way to condense these.

BeginStory()

end

---cutsceneintroroad.Exit(map)
--Engine callback function
function cutsceneintroroad.Exit(map)


end

---cutsceneintroroad.Update(map)
--Engine callback function
function cutsceneintroroad.Update(map)


end

---cutsceneintroroad.GameSave(map)
--Engine callback function
function cutsceneintroroad.GameSave(map)


end

---cutsceneintroroad.GameLoad(map)
--Engine callback function
function cutsceneintroroad.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function BeginStory()
--GAME:UnlockDungeon('prologueEX') --I swear to christ, this is for debug purposes. Do not mess with it.

GAME:MoveCamera(0, -105, 1, true)
GAME:CutsceneMode(true)

GAME:WaitFrames(30)

UI:ResetSpeaker(false)
UI:SetCenter(true)

UI:SetAutoFinish(true)
UI:WaitShowDialogue("You have the ability to skip the intro if you want to, as it is quite lengthy and dialogue-heavy.[pause=30]")
UI:WaitShowDialogue("It is subject to change later on.[pause=30]")
	
UI:ChoiceMenuYesNo("Do you wish to skip the intro, or dive straight to the fun part?", true)
UI:WaitForChoice()
ch = UI:ChoiceResult()

if ch then

cutsceneintroroad.SkipTheIntro()

	else

GAME:WaitFrames(40)

UI:SetAutoFinish(false)
UI:WaitShowDialogue("...")
UI:WaitShowDialogue("... ...")
UI:WaitShowDialogue("... ... ...")

UI:SetCenter(false)

UI:WaitShowDialogue("Oh. [pause=0]Hello there, [pause=10]traveler.")
UI:WaitShowDialogue("My name is [color=#00FFFF]Celebi[color], [pause=10]I'm a Pokémon who can move through time.")
UI:WaitShowDialogue("I'd like to tell you a little story that has happened a long time ago.")
UI:WaitShowDialogue("...Hm, [pause=10]something about you makes me believe you're from a different existence...")
UI:WaitShowDialogue("What I mean is that some elements of this world might confuse you, [pause=10]or strike you as false.")
UI:WaitShowDialogue("For example, [pause=10]the [color=#00FFFF]Kecleon[color] Brothers aren't quite as mean as you'd think they are.")
UI:WaitShowDialogue("Or some events or locations aren't exactly in the right place as you'd remember them being.")
UI:WaitShowDialogue("I should remind you to not think about it too hard, [pause=10]otherwise you're probably gonna be even more confused...")
UI:WaitShowDialogue("...You're willing to listen to this story? [pause=0]Very well. [br]You should sit down for this, [pause=10]it might take a while.")
UI:WaitShowDialogue("Let me remember some details before we begin...[pause=20]")

GAME:WaitFrames(40)

SOUND:PlayBGM("Mysterious World.ogg", true)
--SOUND:PlayBGM("Choosing A Pokémon.ogg", true)
UI:WaitShowBG("Sky", 1, 30)

GAME:WaitFrames(10)

	local party_count = _DATA.Save.ActiveTeam.Players.Count
	for ii = 1, party_count, 1 do
		_DATA.Save.ActiveTeam.Players:RemoveAt(0)
	end

	local assembly_count = GAME:GetPlayerAssemblyCount()
	for i = 1, assembly_count, 1 do
	   _DATA.Save.ActiveTeam.Assembly.RemoveAt(i-1)
	end 

UI:WaitShowDialogue("Our story begins with...")
GAME:WaitFrames(10)
SOUND:PlaySE("Menu/Select")

	local msg = "Play as..." --in case it wasn't obvious, I had to take this from Halcyon, again. There was no way I was gonna figure this out on my own.

	local choices = {RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("aron", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("taillow", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("snivy", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("tepig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("oshawott", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pidgey", 0, "normal", Gender.Genderless)}
					
		--No Egg Moves for you.
	
	local continue = false 
	local player_choice = -1
	
	while not continue do
		UI:ChooseMonsterMenu(msg, choices)
		UI:WaitForChoice()	
		local result = UI:ChoiceResult()
		player_choice = result
		UI:ChoiceMenuYesNo(STRINGS:Format("I believe our story begins with [a/an] {0}...", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		continue = UI:ChoiceResult()
	end
		
	
	local gender = 0
	local genderconfirmed = false
	local gender_choices = {'A boy', 'A girl', "Genderless", "Change Pokémon"}
		while not genderconfirmed do
	UI:BeginChoiceMenu("And they are...", gender_choices, 1, 4)
	UI:WaitForChoice()
	gender = UI:ChoiceResult()
	
	if gender == 1 then
		
		UI:ChoiceMenuYesNo(STRINGS:Format("A boy {0}, I think.", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		ch = UI:ChoiceResult()
		
if ch then
    	gender = Gender.Male
		genderconfirmed = true
else

end
		
	elseif gender == 2 then
	
		UI:ChoiceMenuYesNo(STRINGS:Format("A girl {0}, I assume.", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		ch = UI:ChoiceResult()
		
if ch then
    	gender = Gender.Female
		genderconfirmed = true
else

end
		
	elseif gender == 3 then
	
		UI:ChoiceMenuYesNo(STRINGS:Format("A genderless {0}.", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		ch = UI:ChoiceResult()
		
if ch then
    	gender = Gender.Genderless
		genderconfirmed = true
else

end
		
	else --This is ultimately stupid, and unreal. There's no way this'll work.
		
		UI:WaitShowDialogue("Whoops, I got the wrong Pokémon...")
UI:WaitShowDialogue("It was actually...")

	local party_count = _DATA.Save.ActiveTeam.Players.Count
	for ii = 1, party_count, 1 do
		_DATA.Save.ActiveTeam.Players:RemoveAt(0)
	end

	local assembly_count = GAME:GetPlayerAssemblyCount()
	for i = 1, assembly_count, 1 do
	   _DATA.Save.ActiveTeam.Assembly.RemoveAt(i-1)
	end 

	GAME:WaitFrames(10)
SOUND:PlaySE("Menu/Select")

	local msg = "Play as..." --in case it wasn't obvious, I had to take this from Halcyon, again. There was no way I was gonna figure this out on my own.

	local choices = {RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("aron", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("taillow", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("snivy", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("tepig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("oshawott", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pidgey", 0, "normal", Gender.Genderless)}
					
		--No Egg Moves for you.
	
	continue = false 
	player_choice = -1
	
	while not continue do
		UI:ChooseMonsterMenu(msg, choices)
		UI:WaitForChoice()	
		local result = UI:ChoiceResult()
		player_choice = result
		UI:ChoiceMenuYesNo(STRINGS:Format("I believe our story begins with [a/an] {0}...", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		continue = UI:ChoiceResult()
	end

		
	end
	
end

	local monster = _DATA:GetMonster(player_choice.Species).Forms[player_choice.Form]
	local ability = monster.Intrinsic1
	
	--create player with a species specific egg move and specific ability
	local mon_id = player_choice
	mon_id.Gender = gender

	_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, mon_id, 5, ability, 0))
	GAME:SetTeamLeaderIndex(0)
    _DATA.Save.ActiveTeam.Players[0].IsFounder = true --oh look another script from Halcyon, whoop-de-do.
	_DATA.Save.ActiveTeam.Players[0].IsPartner = true
	_DATA.Save.ActiveTeam.Players[0]:FullRestore()
	
local player = CH('PLAYER') --For this kind of cutscene, local the player AFTER they select their species.
local dummy = CH('dummy')

UI:WaitHideBG(30)

local walkCyclePlayer = false

local coro1 = TASK:BranchCoroutine(function()

while not walkCyclePlayer do

GROUND:MoveInDirection(player, Direction.Left, 5, false, 1)

end

end)

local coro2 = TASK:BranchCoroutine(function()

while not walkCyclePlayer do

GROUND:MoveInDirection(dummy, Direction.Left, 5, false, 1)

end

end)

GAME:WaitFrames(30)
GAME:FadeIn(30)
UI:SetBounds(10,10,300,45)

UI:WaitShowDialogue("Finally, [pause=10]this one had a name...")
UI:WaitShowDialogue("I believe ".. COMMON.GenderCheck(player, "their", false) .." name was...")
GAME:WaitFrames(10)

local warning_names = { --These names are fine, but might cause problems in dialogue.
    ["adam"] = true,
    ["madilyn"] = true,
	["luna"] = true, --She has not appeared yet, but is referenced.
	["bolt"] = true, --Cameo Name
}

local unacceptable_names = { --These names are not fine, as they will cause problems.
	["piks"] = true,
	["pikschu"] = true,
	["hoopa"] = true,
	["madilyn f"] = true,
}

	local yesnoResult = false
	local PC_Name = nil --Used for checks.
	
	while not yesnoResult do
		UI:NameMenu("I believe ".. COMMON.GenderCheck(player, "their", false) .." name was...", "Hint: Use the Keyboard to type!", 43)
		UI:WaitForChoice()
		result = UI:ChoiceResult()
		
		GAME:SetCharacterNickname(GAME:GetPlayerPartyMember(0), result)
		PC_Name = result

if unacceptable_names[string.lower(PC_Name)] then
    
	UI:WaitShowDialogue("That would be identity theft. [pause=0]You can't use that as your name.")
	yesnoResult = false

elseif warning_names[string.lower(PC_Name)] then
    
		UI:ChoiceMenuYesNo("Are you sure about using that name? Somebody else already has that name, and might make things confusing for you.")
		UI:WaitForChoice()
		yesnoResult = UI:ChoiceResult()
	
else

		UI:ChoiceMenuYesNo("I think ".. COMMON.GenderCheck(player, "they are", false) .." called " ..  CH('PLAYER'):GetDisplayName() .. "...")

		UI:WaitForChoice()
		yesnoResult = UI:ChoiceResult()

end
	end
	
	GAME:WaitFrames(20)
	
	SOUND:PlayBGM("Touched by Kindness.ogg", true, 60)
	
	UI:ResetSpeaker()
	UI:SetBounds(10,10,300,45)
	UI:WaitShowDialogue("Yes, [pause=10]I remember it as clear as day now.")
	UI:WaitShowDialogue("The story begins with our lone adventurer named ".. CH('PLAYER'):GetDisplayName() ..".")
	UI:WaitShowDialogue(COMMON.GenderCheck(player, "they are", true) .." a brave and confident Pokémon, [pause=10]willing to harsh the nature to explore the world.")
	
	GAME:FadeOut(false, 30)
	
	walkCyclePlayer = true --Just in case
	GAME:CutsceneMode(false)
	
	GAME:EnterGroundMap("cutsceneintromountain2", "Entrance")

	end
end

function cutsceneintroroad.SkipTheIntro()

GAME:WaitFrames(20)

--SOUND:PlayBGM("Mysterious World.ogg", true)
SOUND:PlayBGM("Choosing A Pokémon.ogg", true)
UI:WaitShowBG("ForestSky", 1, 30)

GAME:WaitFrames(10)
SOUND:PlaySE("Menu/Select")

local party_count = _DATA.Save.ActiveTeam.Players.Count
	for ii = 1, party_count, 1 do
		_DATA.Save.ActiveTeam.Players:RemoveAt(0)
	end

local assembly_count = GAME:GetPlayerAssemblyCount()
	for i = 1, assembly_count, 1 do
	   _DATA.Save.ActiveTeam.Assembly.RemoveAt(i-1)
	end 


	local msg = "Play as..." --in case it wasn't obvious, I had to take this from Halcyon, again. There was no way I was gonna figure this out on my own.

	local choices = {RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("aron", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("taillow", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("snivy", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("tepig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("oshawott", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pidgey", 0, "normal", Gender.Genderless)}
					
		--No Egg Moves for you.
	
	local continue = false 
	local player_choice = -1
	
	while not continue do
		UI:ChooseMonsterMenu(msg, choices)
		UI:WaitForChoice()	
		local result = UI:ChoiceResult()
		player_choice = result
		UI:ChoiceMenuYesNo(STRINGS:Format("Play as [a/an] {0}?", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		continue = UI:ChoiceResult()
	end
		
	
	local gender = 0
	local genderconfirmed = false
	local gender_choices = {'A boy', 'A girl', "Genderless", "Change Pokémon"}
		while not genderconfirmed do
	UI:BeginChoiceMenu("And they are...", gender_choices, 1, 4)
	UI:WaitForChoice()
	gender = UI:ChoiceResult()
	
	if gender == 1 then
		
		UI:ChoiceMenuYesNo(STRINGS:Format("A boy {0}.", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		ch = UI:ChoiceResult()
		
if ch then
    	gender = Gender.Male
		genderconfirmed = true
else

end
		
	elseif gender == 2 then
	
		UI:ChoiceMenuYesNo(STRINGS:Format("A girl {0}.", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		ch = UI:ChoiceResult()
		
if ch then
    	gender = Gender.Female
		genderconfirmed = true
else

end
		
	elseif gender == 3 then
	
		UI:ChoiceMenuYesNo(STRINGS:Format("A genderless {0}.", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		ch = UI:ChoiceResult()
		
if ch then
    	gender = Gender.Genderless
		genderconfirmed = true
else

end
		
	else --This is ultimately stupid, and unreal. There's no way this'll work.

	local party_count = _DATA.Save.ActiveTeam.Players.Count
	for ii = 1, party_count, 1 do
		_DATA.Save.ActiveTeam.Players:RemoveAt(0)
	end

	local assembly_count = GAME:GetPlayerAssemblyCount()
	for i = 1, assembly_count, 1 do
	   _DATA.Save.ActiveTeam.Assembly.RemoveAt(i-1)
	end 

	GAME:WaitFrames(5)
SOUND:PlaySE("Menu/Select")

	local msg = "Play as..." --in case it wasn't obvious, I had to take this from Halcyon, again. There was no way I was gonna figure this out on my own.

	local choices = {RogueEssence.Dungeon.MonsterID("bulbasaur", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("charmander", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("squirtle", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pikachu", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chikorita", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("cyndaquil", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("totodile", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("aron", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("treecko", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("torchic", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("mudkip", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("taillow", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("turtwig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("chimchar", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("piplup", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("eevee", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("snivy", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("tepig", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("oshawott", 0, "normal", Gender.Genderless),
					RogueEssence.Dungeon.MonsterID("pidgey", 0, "normal", Gender.Genderless)}
					
		--No Egg Moves for you.
	
	continue = false 
	player_choice = -1
	
	while not continue do
		UI:ChooseMonsterMenu(msg, choices)
		UI:WaitForChoice()	
		local result = UI:ChoiceResult()
		player_choice = result
		UI:ChoiceMenuYesNo(STRINGS:Format("Play as [a/an] {0}?", _DATA:GetMonster(player_choice.Species):GetColoredName()))
		UI:WaitForChoice()
		continue = UI:ChoiceResult()
	end

		
	end
	
end
	
	local monster = _DATA:GetMonster(player_choice.Species).Forms[player_choice.Form]
	local ability = monster.Intrinsic1
	
	--create player with a species specific egg move and specific ability
	local mon_id = player_choice
	mon_id.Gender = gender

	_DATA.Save.ActiveTeam.Players:Add(_DATA.Save.ActiveTeam:CreatePlayer(_DATA.Save.Rand, mon_id, 5, ability, 0))
	GAME:SetTeamLeaderIndex(0)
	_DATA.Save.ActiveTeam.Players[0].IsFounder = true --You should go check line 329
	_DATA.Save.ActiveTeam.Players[0].IsPartner = true
	_DATA.Save.ActiveTeam.Players[0]:FullRestore()
	
	local player = CH('PLAYER')

local warning_names = { --These names are fine, but might cause problems in dialogue.
    ["adam"] = true,
    ["madilyn"] = true,
	["luna"] = true, --She has not appeared yet, but is referenced.
	["bolt"] = true, --Cameo Name
}

local unacceptable_names = { --These names are not fine, as they will cause problems.
	["piks"] = true,
	["pikschu"] = true,
	["hoopa"] = true,
	["madilyn f"] = true,
}

	local yesnoResult = false
	local PC_Name = nil --Used for checks.
	
	while not yesnoResult do
		UI:NameMenu("Finally, ".. COMMON.GenderCheck(player, "their", false) .." name is...", "Hint: Use the Keyboard to type.", 43)
		UI:WaitForChoice()
		result = UI:ChoiceResult()
		
		GAME:SetCharacterNickname(GAME:GetPlayerPartyMember(0), result)
		PC_Name = result

if unacceptable_names[string.lower(PC_Name)] then
    
	UI:WaitShowDialogue("That would be identity theft. You can't use that as your name.")
	yesnoResult = false

elseif warning_names[string.lower(PC_Name)] then
    
		UI:ChoiceMenuYesNo("Are you sure about using that name? Somebody else already has that name, and might make things confusing for you.")
		UI:WaitForChoice()
		yesnoResult = UI:ChoiceResult()
	
else

		UI:ChoiceMenuYesNo(COMMON.GenderCheck(player, "their", true) .." name's going to be " ..  CH('PLAYER'):GetDisplayName() .. ".")

		UI:WaitForChoice()
		yesnoResult = UI:ChoiceResult()

end
	end

local coro1 = TASK:BranchCoroutine(function() 	
UI:WaitHideBG(120)
end)

local coro2 = TASK:BranchCoroutine(function()
SOUND:PlayBGM("None", true, 180)
end)

TASK:JoinCoroutines{coro1,coro2}

GAME:WaitFrames(20)

UI:SetAutoFinish(false)
UI:SetCenter(false)

UI:ResetSpeaker()
UI:SetSe("Menu/SpeakPast")

UI:WaitShowDialogue("...The Heroes of Sky... [pause=20]The Heroine of Prospect...")
UI:WaitShowDialogue("...They cannot win this battle on their own...")

UI:ResetSe()

GAME:WaitFrames(60)

GAME:EnterGroundMap('branchwaywoods','BranchwayWoodsEntrance','Entrance',false)

end

return cutsceneintroroad

