--[[
    init.lua
    Created: 12/16/2022 09:54:16
    Description: Autogenerated script file for the map BranchwayWoodsExitCutscene.
]]--
-- Commonly included lua functions and data
require 'what_does_n_stand_for.common'

-- Package name
local BranchwayWoodsExitCutscene = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---BranchwayWoodsExitCutscene.Init
--Engine callback function
function BranchwayWoodsExitCutscene.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  

end

---BranchwayWoodsExitCutscene.Enter
--Engine callback function
function BranchwayWoodsExitCutscene.Enter(map) --There should be ABSOLUTELY no way the player should walk on this Groundmap due to the whole thing being strictly for cutscenes. No need for a FadeIn unless absolutely necessary.

GROUND:Hide("throwspot") --somewhat redundant, but necessary because the game can't let you throw from x to y, or from PokemonX to MapLoc Y, or whatever.
GROUND:AddMapStatus("dark")

if SV.branchwaywoodsentrance.BossDefeated then

BranchwayWoodsExitCutscene.ExitScene(obj) --Params are unnecessary, but you'll never know when it'll come in handy. Just stick to the ones you already know.

else

BranchwayWoodsExitCutscene.EnterScene(obj) --this seems like it can get absolutely messy.
	end
end

---BranchwayWoodsExitCutscene.Exit
--Engine callback function
function BranchwayWoodsExitCutscene.Exit(map)


end

---BranchwayWoodsExitCutscene.Update
--Engine callback function
function BranchwayWoodsExitCutscene.Update(map)


end

---BranchwayWoodsExitCutscene.GameSave
--Engine callback function
function BranchwayWoodsExitCutscene.GameSave(map)


end

---BranchwayWoodsExitCutscene.GameLoad
--Engine callback function
function BranchwayWoodsExitCutscene.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function BranchwayWoodsExitCutscene.EnterScene(obj) --This isn't necessarily how I would do anything, but I've heard it's more effective and doesn't cause a lack of default-case. If it messes up percision, I'm going to be angry.
GAME:MoveCamera(250, 230, 1, false)

	local player = CH('PLAYER')
	local thievul = CH('Thievul')
	local purrloin = CH('Purrloin')
	
	GAME:CutsceneMode(true)
	GROUND:Hide("stone_red")
	GAME:FadeIn(20)
	GROUND:MoveInDirection(player, Direction.Right, 81, false, 2)
	
	SOUND:PlayBattleSE("EVT_Emote_Sweatdrop")
	GROUND:CharSetEmote(player, "sweatdrop", 1)
		GAME:WaitFrames(40)
	
	UI:SetSpeaker(player)
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue("(There, [pause=10]that should take me just far enough away from those two.)")
	UI:WaitShowDialogue("(I hope so, [pause=10]anyways. [pause=0]They seemed pretty intent on stealing this thing.)")
	
	GROUND:EntTurn(player, Direction.UpRight)
	GAME:WaitFrames(20)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue("(At least the sun has set quite early.)")

	GAME:FadeOut(false, 20)
	GAME:WaitFrames(10)

		UI:WaitShowBG("Dawn", 1, 20);
		GAME:WaitFrames(40)
		
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue("(Hm... [pause=20]I wish I could've found somewhere to sleep by then.)")
	UI:WaitShowDialogue("(I don't really wish to travel in the cold moonlight.)")
	
	UI:SetSpeakerEmotion("Determined")
	UI:WaitShowDialogue("(Then again, [pause=10]I gotta make sure I get rid of those two losers first.)")
	UI:WaitShowDialogue("(Shouldn't be too hard if I keep walking.)")
	--UI:WaitInput(false);
	UI:WaitHideBG(20);

	GAME:FadeIn(20)
	SOUND:PlayBGM("None", true)

GROUND:MoveInDirection(player, Direction.Right, 15, false, 1)
GAME:WaitFrames(15)
	UI:SetSpeaker(STRINGS:Format("\\uE040"), true, "", -1, "", RogueEssence.Data.Gender.Unknown)
	UI:SetSpeakerEmotion("Normal")
	SOUND:PlayBattleSE("EVT_Emote_Exclaim_Surprised")
    GROUND:CharSetEmote(player, "exclaim", 1)
	UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['PlayerGreetings']))
	
GROUND:CharAnimateTurn(player, Direction.Left, 4, false)
	
	local coro1 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Walk_Sequence(thievul) end)
	local coro2 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Walk_Sequence(purrloin) end)
 
TASK:JoinCoroutines({coro1,coro2})
	
	SOUND:PlayBattleSE("EVT_Emote_Shock")
    GROUND:CharSetEmote(player, "shock", 1)
	GROUND:AnimateInDirection(player, "Idle", Direction.Left, Direction.Right, 5, 3, 2)

GAME:WaitFrames(20)

SOUND:PlayBGM("Rising Fear.ogg", true)

UI:SetSpeaker(player, false)
UI:SetSpeakerLoc(264,131)
UI:SetSpeakerEmotion("Angry", true)
UI:WaitShowDialogue("(Crud, [pause=10]that dungeon didn't save me the trouble of avoiding these two...)")

GROUND:MoveInDirection(thievul, Direction.Right, 45, false, 2)
GAME:WaitFrames(10)
	GROUND:EntTurn(thievul, Direction.DownRight)
	
	GROUND:EntTurn(player, Direction.UpLeft)

UI:SetSpeaker(thievul)
UI:SetSpeakerLoc(075,050)
UI:SetSpeakerEmotion("Determined")
UI:WaitShowDialogue("Enough with the [color=#00FFFF]Meowth[color] and the [color=#00FFFF]Rattata[color], [pause=10]give us that medallion!")

GROUND:MoveInDirection(purrloin, Direction.Right, 45, false, 2)
GAME:WaitFrames(10)
	GROUND:EntTurn(purrloin, Direction.UpRight)
	GROUND:EntTurn(player, Direction.DownLeft)

UI:SetSpeaker(purrloin)
UI:SetSpeakerEmotion("Angry")
UI:SetSpeakerLoc(075,120)
UI:WaitShowDialogue("You'd better, [pause=10]or we're gonna scratch you until you give in!")
UI:WaitShowDialogue("And don't even think about running away!")

	GROUND:AnimateInDirection(player, "Walk", Direction.Left, Direction.Right, 10, 3, 2)
	GAME:WaitFrames(20)

UI:SetSpeaker(player, false)
UI:SetSpeakerLoc(264,131)
UI:SetSpeakerEmotion("Determined", true)
UI:WaitShowDialogue("(Gah, [pause=10]they'll just keep chasing me until I get too tired.)")
UI:WaitShowDialogue("(What in the world do I do about them...?)")

		GROUND:CharSetAnim(thievul, "Hop", false) --unless I find a better 'hopping' animation, this'll have to do.
		SOUND:PlayBattleSE("EVT_Emote_Complain_2")
		GROUND:CharSetEmote(thievul, "angry", 0)
		GAME:WaitFrames(20)
		
UI:SetSpeaker(thievul)
UI:SetSpeakerEmotion("Angry")
UI:SetSpeakerLoc(075,050)
UI:WaitShowDialogue("Fine, [pause=10]stay silent. [pause=0]We'll just rip it out of your claws then!")

	SOUND:PlayBGM("None", true)
	UI:ResetSpeakerLoc()
	--SOUND:PlayBattleSE("EVT_Battle_Transition")
	  COMMON.BossTransition()
	--UI:WaitShowBG("Pre_Battle", 4, 20)
		--GAME:WaitFrames(20)
		--UI:WaitHideBG(20)
	GAME:FadeOut(true, 0)

	GAME:CutsceneMode(false)
	
	GAME:EnterZone('branchwaywoods', 0, 0, 0)
end

function BranchwayWoodsExitCutscene.ExitScene(obj)
	local player = CH('PLAYER')
	local thievul = CH('Thievul')
	local purrloin = CH('Purrloin')
	local itemAnim = nil 
	local throwspot = CH('throwspot')
	
		GAME:CutsceneMode(true)
		SOUND:PlayBGM("None", true)
		GAME:MoveCamera(325, 230, 1, false)
		
	local coro1 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Walk_Sequence2(thievul) end)
	local coro2 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Walk_Sequence2(purrloin) end)
	local coro3 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Walk_Sequence2(player) end)

		TASK:JoinCoroutines({coro1,coro2,coro3})
		
		GROUND:EntTurn(player, Direction.Left)
		GROUND:Hide("stone_red")
		
		GAME:WaitFrames(20)
		GAME:FadeIn(20)
		
		UI:SetSpeaker(player)
		UI:SetSpeakerLoc(264,131)
		UI:SetSpeakerEmotion("Angry", true)
		UI:WaitShowDialogue("...")
		
		GAME:WaitFrames(10)
		
		UI:SetSpeaker(thievul)
		UI:SetSpeakerLoc(065,050)
		UI:SetSpeakerEmotion("Angry")
		UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['AngryAtPlayer'], player:GetDisplayName()))
		
		GROUND:CharSetAnim(thievul, "Hop", false) --unless I find a better 'hopping' animation, this'll have to do.
		SOUND:PlayBattleSE("EVT_Emote_Complain_2")
		GROUND:CharSetEmote(thievul, "angry", 0)
		GAME:WaitFrames(20)
		
		UI:WaitShowDialogue("We're aren't going to leave until you give us that medallion, [pause=10]you annoying little twig...!")
		
		GROUND:AnimateInDirection(player, "Walk", Direction.Left, Direction.Right, 10, 3, 2)
		
		GAME:WaitFrames(15)
		
		UI:SetSpeaker(player, false)
		UI:SetSpeakerLoc(264,131)
		UI:SetSpeakerEmotion("Pain", true)
		UI:WaitShowDialogue("...")
		UI:WaitShowDialogue("(I can't keep fighting them. [pause=0]If they get lucky, [pause=10]they're going to win against me.)")
		UI:SetSpeakerEmotion("Determined", true)
		UI:WaitShowDialogue("(I have to throw them off my trail quickly!)")
		UI:WaitShowDialogue("(Just need a good plan... [pause=20]Got it!)")

	SOUND:PlayBattleSE("DUN_Throw_Start")
	GROUND:CharSetAnim(player, "Twirl", false)
	GROUND:EntTurn(player, Direction.Up)
		GAME:WaitFrames(10)
		
  SOUND:PlayBattleSE("DUN_Throw_Arc")
  itemAnim = RogueEssence.Content.ItemAnim(player.Bounds.Center, throwspot.Bounds.Center, "stone_red", 30, 1) --351 220
  GROUND:PlayVFXAnim(itemAnim, RogueEssence.Content.DrawLayer.Normal)
    GAME:WaitFrames(RogueEssence.Content.ItemAnim.ITEM_ACTION_TIME)
	
		  local emitter = RogueEssence.Content.SingleEmitter(RogueEssence.Content.AnimData("Razor_Leaf_Charge_Dark", 3))
		  emitter.LocHeight = 5
		  GROUND:PlayVFX(emitter, 359, 160) --Disable this if it doesn't work, supposed to be Razor Leaf's Charge to simulate impact. 360 150 is dummy.
		
	local coro1 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Walk_Sequence3(thievul) end)
	local coro2 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Walk_Sequence3(purrloin) end)
	

					
		TASK:JoinCoroutines({coro1,coro2})
		
		GAME:WaitFrames(20)

		GROUND:MoveInDirection(player, Direction.Right, 120, false, 3)
		
		UI:SetSpeaker(purrloin)
		UI:SetSpeakerLoc(080,120)
		UI:SetSpeakerEmotion("Pain")
		UI:WaitShowDialogue("Fiddlesticks, [pause=10]I'm too weak to chase after ".. GenderCheck(player, "them", false) .."...")
		
	local coro1 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Turn_Sequence(thievul) end)
	local coro2 = TASK:BranchCoroutine(function() BranchwayWoodsExitCutscene.Turn2_Sequence(purrloin) end)
				
		TASK:JoinCoroutines({coro1,coro2})

		GROUND:CharSetEmote(thievul, "", 0)
		
		UI:SetSpeaker(thievul)
		UI:SetSpeakerLoc(080,050)
		UI:SetSpeakerEmotion("Normal")
		UI:WaitShowDialogue("Who cares, [pause=10]".. GenderCheck(player, "they must've", false) .." thrown the medallion in the bushes. [pause=0]Go find it for us.")
		
		SOUND:PlayBattleSE("EVT_Emote_Sweating")
		GROUND:CharSetEmote(purrloin, "sweating", 1)
		GAME:WaitFrames(40)
		
		UI:SetSpeaker(purrloin)
		UI:SetSpeakerLoc(080,120)
		UI:SetSpeakerEmotion("Pain")
		UI:WaitShowDialogue("Fine, [pause=10]it'd better be it...")
		--UI:WaitShowDialogue("I'm too tired to chase after them if it isn't...")
		
		GROUND:MoveInDirection(purrloin, Direction.UpRight, 30, false, 2)
		GROUND:EntTurn(purrloin, Direction.UpLeft)
		GROUND:EntTurn(thievul, Direction.Right)
		
		GAME:WaitFrames(20)
		
		GROUND:CharSetAnim(purrloin, "Walk", false)
		
		GAME:WaitFrames(40)
		
SOUND:PlayBattleSE("EVT_Emote_Confused")
    GROUND:CharSetEmote(purrloin, "question", 1)
	
	GAME:WaitFrames(40)
		
		GROUND:CharEndAnim(chara)
		
		UI:SetSpeakerLoc(225,055)
		UI:SetSpeakerEmotion("Worried", true)
		UI:WaitShowDialogue("Oh no...")
		
	SOUND:PlayBattleSE("EVT_Emote_Confused")
    GROUND:CharSetEmote(thievul, "question", 1)
	
	GAME:WaitFrames(40)
		
		UI:SetSpeaker(thievul)
		UI:SetSpeakerLoc(080,050)
		UI:SetSpeakerEmotion("Normal")
		UI:WaitShowDialogue("What is it? [pause=0]Is it stuck on something?")
		
		GROUND:EntTurn(purrloin, Direction.DownRight)
		SOUND:PlayBattleSE("EVT_CH02_Item_Place")
		GROUND:Unhide("stone_red")
		
		GAME:WaitFrames(20)
		
		GROUND:MoveInDirection(thievul, Direction.Right, 20, false, 2)
		--GROUND:EntTurn(thievul, Direction.UpRight)
		
		GAME:WaitFrames(25)
		
		UI:SetSpeaker(purrloin)
		UI:SetSpeakerLoc(225,055)
		UI:SetSpeakerEmotion("Determined")
		UI:WaitShowDialogue("Worse, [pause=10]it's a dupe!")
		UI:WaitShowDialogue("This is a [color=#32a852]Fire Stone[color], [pause=10]not the medallion!")
		GROUND:CharSetAnim(thievul, "Charge", true)
		
		GAME:WaitFrames(10)
		GROUND:CharSetEmote(thievul, "angry", 0)
		UI:SetSpeaker(thievul)
		UI:SetSpeakerLoc(090,050)
		UI:SetSpeakerEmotion("Angry")
		UI:WaitShowDialogue("Grrr...! [pause=0]How dare ".. GenderCheck(player, "they", false) .."...!")
		
		GAME:WaitFrames(12)
		GAME:FadeOut(false, 20)
		
		GAME:CutsceneMode(false) --blackout scene with thievul removed. Didn't fit.

		GAME:WaitFrames(60)
		GAME:EnterZone('cutscenezone', -1, 0, 0)
		
end

function BranchwayWoodsExitCutscene.Walk_Sequence(character)
  GROUND:MoveInDirection(character, Direction.Right, 60, false, 2)
end

function BranchwayWoodsExitCutscene.Walk_Sequence2(character)
  --GROUND:MoveInDirection(character, Direction.Right, 35, false, 3)
  --GROUND:MoveInDirection(character, Direction.Right, 35, false, 3)
  GROUND:MoveInDirection(character, Direction.Right, 87, false, 3)
end

function BranchwayWoodsExitCutscene.Walk_Sequence3(character)
  GROUND:MoveInDirection(character, Direction.Right, 15, false, 1)
end

function BranchwayWoodsExitCutscene.Turn_Sequence(character) --if this don't work, just animate normally. / F--- it, just split the two functions up and coro it.
  GROUND:CharAnimateTurn(character, Direction.Down, 4, false)
end

function BranchwayWoodsExitCutscene.Turn2_Sequence(character)
  GROUND:CharAnimateTurn(character, Direction.Up, 4, true)
end

function GenderCheck(chara, form, uppercase)

    local gender = chara.CurrentForm.Gender --Ripped straight from Halcyon / I should really put this in the Common.LUA thing instead of this, this is messy af.
    local value = ""
    
    if gender == Gender.Female then
        local female_pronouns = {
            ["they"] = "that girl",
            ["they must've"] = "she must've",
            ["them"] = "her",
        }
        value = female_pronouns[form]
    elseif gender == Gender.Male then
        local male_pronouns = {
            ["they"] = "that boy", 
            ["they must've"] = "he must've", 
            ["them"] = "him", 
        }
        value = male_pronouns[form]
    else -- if neither male or female, use they/them, so just return the form 
        value = form
    end

return uppercase and value:gsub("^%l", string.upper) or value

end

return BranchwayWoodsExitCutscene

