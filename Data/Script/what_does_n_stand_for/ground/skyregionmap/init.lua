--[[
    init.lua
    Created: 02/06/2023 23:20:51
    Description: Autogenerated script file for the map skyregionmap.
]]--
-- Commonly included lua functions and data
require 'what_does_n_stand_for.common'

-- Package name
local skyregionmap = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---skyregionmap.Init
--Engine callback function
function skyregionmap.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  

end

---skyregionmap.Enter
--Engine callback function
function skyregionmap.Enter(map)

if not SV.dungeons.mpr_mosscrop then
GROUND:Hide("MossyOutcroppings")
end

if not SV.dungeons.mpr_seasong then
GROUND:Hide("SeasideSerenade")
end

if not SV.dungeons.mpr_cackle then
GROUND:Hide("CacklingQuarry")
end

  GAME:FadeIn(20)
 
 if not SV.prologue_alts.maproam_tutorial then
skyregionmap.tutorial()
 end
 
end

---skyregionmap.Exit
--Engine callback function
function skyregionmap.Exit(map)


end

---skyregionmap.Update
--Engine callback function
function skyregionmap.Update(map)


end

---skyregionmap.GameSave
--Engine callback function
function skyregionmap.GameSave(map)


end

---skyregionmap.GameLoad
--Engine callback function
function skyregionmap.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------

function skyregionmap.TreasureTownEnter_Touch(obj, activator)

	UI:ChoiceMenuYesNo(STRINGS:Format(STRINGS.MapStrings['TreasureTown']), false)
	UI:WaitForChoice()
	ch = UI:ChoiceResult()
if ch then
	GAME:FadeOut(true, 30)
	GAME:WaitFrames(30)
    GAME:EnterGroundMap("treasuretowncrossroads", "EntranceRight")
else

end
end

function skyregionmap.DrenchedBluffEnter_Touch(obj, activator)

		if not SV.dungeons.mpr_drenched then

	UI:ResetSpeaker()
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue("Look, [pause=10]you weren't ever supposed to get in Map Roam this early, [pause=10]I can't let you just go to Drenched Bluff.")
	UI:WaitShowDialogue("Initially, I wanted Maproam to be a thing at all times, but that's a bit more difficult than I thought it'd be.")
	UI:WaitShowDialogue("So go do the story in Treasure Town, then we'll talk about letting you in the Dungeon.")

		else
	UI:ChoiceMenuYesNo(STRINGS:Format(STRINGS.MapStrings['DrenchedBluff']), false)
	UI:WaitForChoice()
	ch = UI:ChoiceResult()
  if ch then
    GAME:FadeOut(false, 30)
	GAME:WaitFrames(30)
	GAME:EnterDungeon('drenchedbluff', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)
  else

  end

		end
end

function skyregionmap.CacklingQuarry_Touch(obj, activator)

	UI:ChoiceMenuYesNo(STRINGS:Format(STRINGS.MapStrings['CacklingQuarry']), false)
	UI:WaitForChoice()
	ch = UI:ChoiceResult()
  if ch then
    GAME:FadeOut(false, 30)
	GAME:WaitFrames(30)
	GAME:EnterDungeon('cacklingquarry', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)
	else
	end

end

function skyregionmap.SeasideSerenade_Touch(obj, activator)

	UI:ChoiceMenuYesNo(STRINGS:Format(STRINGS.MapStrings['SeasideSerenade']), false)
	UI:WaitForChoice()
	ch = UI:ChoiceResult()
  if ch then
    GAME:FadeOut(false, 30)
	GAME:WaitFrames(30)
	GAME:EnterDungeon('seasideserenade', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)
	else
	end

end

function skyregionmap.MossyOutcroppings_Touch(obj, activator)

	UI:ChoiceMenuYesNo(STRINGS:Format(STRINGS.MapStrings['MossyOutcroppings']), false)
	UI:WaitForChoice()
	ch = UI:ChoiceResult()
  if ch then
    GAME:FadeOut(false, 30)
	GAME:WaitFrames(30)
	GAME:EnterDungeon('mossyoutcroppings', 0, 0, 0, RogueEssence.Data.GameProgress.DungeonStakes.Risk, true, true)
	else
	end

end

function skyregionmap.tutorial()
  GAME:CutsceneMode(true)
  
  UI:ResetSpeaker()
  UI:SetSpeakerEmotion("Normal")
  UI:WaitShowDialogue("Welcome to Map-Roam, a semi-realistic way to explore the map, and enter dungeons you know about.")
  UI:WaitShowDialogue("There is no real benefit of this mode, it serves as a small roleplaying area, if you desire immersion.")
  UI:WaitShowDialogue("If you have no idea where your desired dungeon is, or if you simply don't want to do this, return to the town, and re-pick from the menu.")
  
  SV.prologue_alts.maproam_tutorial = true
  GAME:CutsceneMode(false)
 end

return skyregionmap

