--[[
    init.lua
    Created: 01/02/2023 19:44:29
    Description: Autogenerated script file for the map sharpedobluff.
]]--
-- Commonly included lua functions and data
require 'what_does_n_stand_for.common'

-- Package name
local sharpedobluff = {}

-- Local, localized strings table
-- Use this to display the named strings you added in the strings files for the map!
-- Ex:
--      local localizedstring = STRINGS.MapStrings['SomeStringName']


-------------------------------
-- Map Callbacks
-------------------------------
---sharpedobluff.Init
--Engine callback function
function sharpedobluff.Init(map)

  --This will fill the localized strings table automatically based on the locale the game is 
  -- currently in. You can use the MapStrings table after this line!
  

end

---sharpedobluff.Enter
--Engine callback function
function sharpedobluff.Enter(map)
GROUND:Hide("Piks")

SOUND:FadeInSE("Beach_Noise")

if SV.chapter.number == 1 then
	if not SV.chapter1.piks_reminder then
		GROUND:Unhide("Piks")
		sharpedobluff.PiksReminder()
	end
end

COMMON.WeatherApply()

if not SV.chapter1.sbfadein then
  GAME:FadeIn(20) --Really stupid way of hiding the fade in, but it's better than nothing. It will continue reading until this function is over.
end

end

---sharpedobluff.Exit
--Engine callback function
function sharpedobluff.Exit(map)

SOUND:FadeOutSE("Beach_Noise")

end

---sharpedobluff.Update
--Engine callback function
function sharpedobluff.Update(map)


end

---sharpedobluff.GameSave
--Engine callback function
function sharpedobluff.GameSave(map)


end

---sharpedobluff.GameLoad
--Engine callback function
function sharpedobluff.GameLoad(map)

  GAME:FadeIn(20)

end

-------------------------------
-- Entities Callbacks
-------------------------------


function sharpedobluff.LeaveBluff_Touch(obj, activator)

GAME:FadeOut(false, 20)
GAME:EnterGroundMap("treasuretown1", "EntranceLeft")

end

function sharpedobluff.Sign_Action(obj, activator)

  UI:ResetSpeaker()
  UI:SetCenter(true)
  UI:SetAutoFinish(true)
  
  UI:WaitShowDialogue("[color=#FFC663]Treasure Town[color] -->")
  
  UI:SetCenter(false)
  UI:SetAutoFinish(false)

end

function sharpedobluff.EnterBase_Touch(obj, activator) --add transition later. Find way to disable the other two first or add other values to let the game be unable to consider them. / Good job, you made one instance have like 4 functions to do and you had problems coding them.
local player = CH('PLAYER')

if SV.chapter.number == 0 then
	if not SV.prologue.crossroads_cs1 then

	UI:SetSpeaker(player)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue("(I hear someone sleeping down there.)")
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue("(Maybe I shouldn't barge into someone's home without their permission.)") --Making fun of the RPG Trope where the Protagonist just enters people's houses uninvited.
	
	elseif SV.prologue.crossroads_cs1 then
		if not SV.prologue.spindas_shaker_given then
	
	UI:SetSpeaker(player)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue("(I hear PokÃ©mon talking down there.)")
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue("(Maybe I shouldn't barge into someone's home and interupt their conversation.)") --That's right baby, I'm considering all the options.
	
		elseif SV.prologue.spindas_shaker_given == true then --why did I do this, nobody's going to see this in a million years lol
	UI:SetSpeaker(player)
	UI:SetSpeakerEmotion("Normal")
	UI:WaitShowDialogue("(I don't hear anything down there.)")
	UI:SetSpeakerEmotion("Worried")
	UI:WaitShowDialogue("(I don't think it's nice to go inside someone's home while they aren't there.)")
			end
		end
		
elseif SV.chapter.number >= 1 then --This shouldn't activate until the end of the Chapter.
	
GAME:FadeOut(false, 20)
GAME:EnterGroundMap("electraterhome", "Entrance")
	
	end
end

function sharpedobluff.PiksReminder()
local player = CH('PLAYER')
local Piks = CH('Piks')
SV.chapter1.sbfadein = true --Stop Fadein at the end.

GAME:CutsceneMode(true)

local coro1 = TASK:BranchCoroutine(function() sharpedobluff.FadeInWalkLeft_Sequence(player) end)
local coro2 = TASK:BranchCoroutine(function() sharpedobluff.FadeInWalkLeft2_Sequence(player) end)

TASK:JoinCoroutines({coro1,coro2})

GROUND:EntTurn(Piks, Direction.DownRight)

GROUND:CharSetEmote(Piks, "exclaim", 1)
SOUND:PlayBattleSE("EVT_Emote_Exclaim")
GAME:WaitFrames(30)

UI:SetSpeaker(Piks)
UI:SetSpeakerLoc(110,050)
UI:SetSpeakerEmotion("Happy")
UI:WaitShowDialogue(STRINGS:Format(STRINGS.MapStrings['BeckonPlayer'], player:GetDisplayName()))
GROUND:EntTurn(player, Direction.UpLeft)
GAME:WaitFrames(10)
UI:SetSpeakerEmotion("Normal")
UI:WaitShowDialogue("[color=#54ebaf]Adam[color] and I have been waiting for you.")
UI:WaitShowDialogue("We have to establish a few things first before we start your actual assignment.")
UI:WaitShowDialogue("Follow me real quick, [pause=10]please.")

local coro1 = TASK:BranchCoroutine(function() sharpedobluff.FadeInWalkLeft_Sequence(player) end)
local coro2 = TASK:BranchCoroutine(function() sharpedobluff.FadeInWalkLeft_Sequence(Piks) end)
local coro3 = TASK:BranchCoroutine(function() sharpedobluff.FadeOutWalkLeft2_Sequence(player) end)

TASK:JoinCoroutines({coro1,coro2,coro3})

GAME:WaitFrames(10)
GAME:CutsceneMode(false)
SV.chapter1.piks_reminder = true --Don't play this again.

GAME:EnterGroundMap("electraterhome", "Entrance")

end

function sharpedobluff.FadeInWalkLeft_Sequence(character)
GROUND:MoveInDirection(character, Direction.Left, 30, false, 1)
end

function sharpedobluff.FadeInWalkLeft2_Sequence(character)
GAME:FadeIn(20)
end

function sharpedobluff.FadeOutWalkLeft2_Sequence(character)
GAME:FadeOut(false, 20)
end

return sharpedobluff

